import java.util.Scanner;
import java.util.Stack;

class Main {
	public int solution(int n, int[][] board, int m, int moves[]) {
		int answer = 0;
		Stack<Integer> stack = new Stack<Integer>();
		for(int i=0; i<m; i++) {
			int cnt = 0;
			for(int j=0; j<n; j++) {
				if(cnt==1) break;
				if(!(board[j][moves[i]-1]==0)) {
					stack.push(board[j][moves[i]-1]);
					board[j][moves[i]-1] = 0;
					cnt++;
					if(stack.size()>1) {
						if(stack.lastElement()==stack.get(stack.size()-2)) {
							stack.pop();
							stack.pop();
							answer +=2;
						}
					}
				}
			}
		}
		return answer;
	}
	public static void main(String[] args) {
		Main T = new Main();
		Scanner kb = new Scanner(System.in);
		int n = kb.nextInt();
		int[][] board = new int[n][n];
		for(int i=0; i<n; i++) {
			for(int j=0; j<n; j++) {
				board[i][j]=kb.nextInt();
			}
		}
		int m = kb.nextInt();
		int[] moves = new int[m];
		for(int i=0; i<m; i++) {
			moves[i] = kb.nextInt();
		}
		System.out.println(T.solution(n, board, m, moves));
	}
}
